/*
更新时间: 2021-05-22 22:10
点击几篇文章和视频，自动获取阅读请求，在Github Actions中的Secrets新建name为'YOUTH_READ'的一个值，拷贝抓包的请求体到下面Value的文本框中，添加的请求体越多，获得青豆次数越多，本脚本不包含任何推送通知
多个请求体时用'&'号或者换行隔开" ‼️
*/

const $ = new Env("中青看点阅读")
//const notify = $.isNode() ? require('./sendNotify') : '';
let ReadArr = ['p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7eqmSYFqaQod4-l-9NIixVjS-dQTYzUTBLx350GYlLRFIoPIUc1HVNc7W03KJnBxSzrF5bTCTTi1GEL-m0SigRv9Fg-VpLFkhbRIOhCNIWkzO1c6DqjKbq8N5q4IuKeJYFCeSGY2kxpfN1ONLOcYxBsvX5ga-bgJmmRhZzCjZNRzkDbPBiVs53qIMBKS0OLrqgPl2KQkPXCA7LIFipvHaMsNEDBPnnXUCtCDmWNwHsjRuKZ9vN5zPW2eZvgzHIdLIYEDQ7PLdUOWn4DZt6PrcPeEmVT2BbqEFPJkcEsYgTlDn5gcEdb6kVkuBBiQ7uEQnRTSb6SrJ-083FwWQYYrKFMdWBg27VpHlair9Iutcq4NCjWGeMfk7T5CTOQTW7xAElCv7tQ63iYoT0oVcOz2hbJmf7QCvPqnKuU3ioRUDVReCcskTfbu3xrGVu6tP2hSgPFp03WFbKWCKFSzJDf6GQ-WwJt2ZxkTJRwpPGNAlY3iz--oETu_uwEdZAwFyzZxq3OCKZkT-89vzAJTz6QnQkcQRfxZwhH1EsKGrb7oeICYIT3t84wYMmdvuotKVbLQTk1t3V4nV0X-o','p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7enSc0LSMDKfMN1pw7Ibu3zGmwpoxC6tXrp6LV3oW8VU9uRQxijFwa9ecu78Lal3Smcy9opHAILKN1JWIneh81bcRGC63sf3GH6xYMLJ4dXp8x6PbaVdgYDS8LbsHFVzbK2jJwyhOK8PTr9WfLf17M01GD5MObiwI19V8gAC1bA3rSfPBV2QNnvPtwvKOCyV1ZHzdhy5Zlu7MtgNhCSBcgwjW-iFnIf9H1LifcHjW4o9QRshh85fBZZiKZ_9JQxNOCOiQeHFOowpmhFEUnUsToEgaSEeK5a7CPnm08bZAIomwhGEVO7p1BUV9vOtogHG2ik7EpyPlWdwTXVV9DM3hIpbnRwqC6YVmYmd06SpTMfzR4akz-xBpB-gHtqXtddG649oCEmzJ53U55NBZxVvRb9YUZ9sDqbxV9stwh4zuEfsM59wUNvaGHFaNdQ4m0suUST3_SjgeVDNwEE6wZc4sbgPC3hXmcU33xss6Qy4N_Tg_IcSxIfUVtg6rBDkSiQBz5lRXi3FBRp4SL1yYwvleMM5sORfFVoyz1M0rekAGo_uJ1arvCjzd8tTNwUS9FY7YmcvSdEn-DGtl', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7enlD5FmvANHXmKKfTeM3-zXNAWX2pOjMZeV1fcHNFY99N9RA-nhoJLVkvdmF9SyEe4mviz3PgnJEXvYofhrH4_6B8pQt0AZWFIOscCMf4wzahlEoHrX8OUlzl2p8DGaRGW5H_x9ymgHyh0MxTjWB5DrfuPbKzYznQ4hmzOOY5J8ztoZv-RqDJ81PflbWdN0d67IrAIBh8k1amc7Xquggz4Zu4KM7IdkfWY6Ksm3_YVAWb78lkG4NFaEopk2rsZSCXC4QWJu4sfxTWCtIOlohrCDYod-HPZWSM51laqDjDnz_0YIpUqJNQJu_5G_Gp9QUW46V6wqAu86E9YPnjwiLRXEpI_mof4sq7ayd85M66bYhknq5d-4Nc2nqsgxXi89rNvpfWM5quBByaAO6RRVZsiQASnkjdspUQrTo4Joupgr4yqHqiqgIpcHyCiz236kyBXImbqLXLrcRKz4w-t8llHp1Hbkvkb3tzhNc0oR91yKGoB4rl7kq1P14jo-ro771OAVeJAHMg4Nx25WqDDnOYyI98D8YM43bkyz3m8eVF7DtetYq_B2KQiEUmRFtvRKoda09ABth3GK5', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7euguFlVqa6-qqS6cPolY-XE08w_7KcNj0X9ET64MUeuiMECPPnmOuGzfKc1jxZD9n6GqRd2U9L5OhmI7SzCH6rF9BS90GCtIEOJAq4l-ww3EB8rUpY8DQzrHCUQNYX4W8627A1tl0PGLoxi3FhQ_E8KMixwj8sfgshyVygT5BfJW53t7rDgkj3dEwCqIhDVteo0eJxusi5kUb3zEbaytnRVylnOIO0qeNK9b36KGXWYnLPl66dx5FUBMuX-moQUMtwiwscDD8hoiTtBlgYnyq2QGFPP364yZ_GxseHNHK7l4aOeFwjlQ5ssKN6kDrgkw3_DnccVpfVSw1RxUKy5dEHpPAEkennuIOqmKJVI5qzOdt8lIW6skqdpr1CzaJBbhDaaBq0mChl-siaVBcdJHB6RnNO8QyiOwynjk8a5hh_owprWmndsCvK8rjyhbt2G24BrhWJIjRwWZWZELP78lzfqMV8mzywLg38dZymKqc8PTtXHzHHTJ-KHFv_sx-h2g2cRvK1dZclDe1ag54gGtDxb4PMxhD9CZ3z5pLDiXuLW09jnhXCyDq4PdjqG9CYJPdzh3Yhoth4FW', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7emVybydwWGvddSAWstbjGaJ2Ci8ikynDE_bZVAp2o9i97O8VN1Ozi-A25FKfMBZCPDeMP5D6n_4EUs54LOtllDdHpD1D8pRtylnLJsnNnJEB3Vm8THpbNC-lLErfP9jK_Dp5E4rgrBUwmv59jDyCQz-e7OorjtGkjaVUKRh44c4tm_-vBVDhCQIkFXDqBenM8iS_T1zW84HUWy8pJEwWnm7l4mEj5OICFFOp0ssnNdzc-2xRC1djbYdRziNsILnp6yW4vA7gxNsvMKHqDzUP7ZCsz7p6TywupVzsssEiRymEEVNhuJJqrrpZp4nAr0X1gTEAfUg3yA1RBPZIRajEzq8IXxnsL02YUjLyH0zdoABl1g_C2lQLIbI_63aQH4_8AwRczJLZX7ef0wtOlwUIHp0WhDmw9612GxKX8GCxLikzIS1Ow9R5hln4bR_FVWB7beqWcHDF7X1a5wbksAegLdvIk_1p6MX_qXBxSqrhEalKngwqVVd-6J3r0aOmWjngrVXp5yrEZexIpnZW-IGb2ECQfhtvdxrrS1rchK0QjZEFPli1l-AtUX6aAQb9epDzcmUk7JlM8M6K', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7emVybydwWGvddSAWstbjGaJ2Ci8ikynDE_bZVAp2o9i97O8VN1Ozi-A25FKfMBZCPDeMP5D6n_4EUs54LOtllDdHpD1D8pRtylnLJsnNnJEB3Vm8THpbNC-lLErfP9jK_Dp5E4rgrBUwmv59jDyCQz-e7OorjtGkjaVUKRh44c4tm_-vBVDhCQIkFXDqBenM8iS_T1zW84HUWy8pJEwWnm7l4mEj5OICFFOp0ssnNdzc-2xRC1djbYdRziNsILnp6yW4vA7gxNsvMKHqDzUP7ZC1v2LbKST8-Oydzx5pxoUCgvy1_UUnMsnvCKFLR2toB052oWLr-RSQmjg4ZDcIt9XqyyBYVc6wpblDojsQSQVPbCfhAyQB0o6lz6oBmUfjwjpG8oPBMm_srYyF4Xy_BYu7TxaJU7nGoMrXSWZL-cW-y4KKBMydYiE_8SGYFfvKVgXp8MtSaTErSAV9KaVdnVKx0GxtqL4Hfbf8GcgzIgRpmIA_3Li6PRLMboFlEoEiNrvmBdHaOkWaFQy3kAjW86E2bV-gA9m4HBh5yrNadXDQeZ9rGLkDnaa47c8nx0wQclJdMrTwUp84', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7emVybydwWGvddSAWstbjGaJ2Ci8ikynDE_bZVAp2o9i97O8VN1Ozi-A25FKfMBZCPDeMP5D6n_4EUs54LOtllDdHpD1D8pRtylnLJsnNnJEB3Vm8THpbNC-lLErfP9jK_Dp5E4rgrBUwmv59jDyCQz-e7OorjtGkjaVUKRh44c4tm_-vBVDhCQIkFXDqBenM8iS_T1zW84HUWy8pJEwWnm7l4mEj5OICFFOp0ssnNdzc-2xRC1djbYdRziNsILnp6yW4vA7gxNsvMKHqDzUP7ZDhAa27O8x2c60XezIRFtcqhc69lKSJgL128GqszHC2XLXGtDJhd_L_7yTpWTvGjnyh2DBYheIMVxOWYANpDmA_Q2sqLHJUfXkHgi0DyzTtnuJNtAwFKNa2DUNhKa18pl6NNhpODaj6IydqoHxPhSg7YYoIK_23oeFWiSNU5uTrneBhp9IaRcqPL1l0xucD0w9XgxzMeuZBUFhqBnZ4ic3MkyWfX-ziMzAm9XQrNhQIX51f_i2d-8p9OiMT4GGRTzf7PGCd5Zzq5pSyIZigVGyi56Z4ZbRvxaC0dCPbkIjKR7C5BVAXi6aU', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7enBsSFmAeQHRn-sq4znxLk_o-Xs5HyCbP-LplxATBpUt-PppK7K4GGrZSbLyzVci_-tzdLLGVeOic8-jsIru010azQxBbfM1MwyDDVa7uSalVEMxkO3XanDOyvAaioQkm5uWeW3EC8i_eR9wQZbBBlm8I_gL3nW1dp8EWD4qay3IgiUnhfoXLYBta77evkET1Qj_wiS5bkjpTUuhOVlacb6YheL6lExBcKPoXU0TktTHgRy0Cd7lh5-zImmvAx2D4MPUiEuYv0E-K-GKAOsmEhVDKtj-OtUiivDMndto_0nsjEai9o50twXZh5STUwFBwYmSc90uJsLVg0AcjpJWsQ3_LLd2mwwTbIiXHMn4VviagRQ8bWp5p9r8HmYzlp26WkPo0G3dgP0aRM9VhBfD78mUKdiaAzYk0wPHSr2P4wHhRrwU0MqSy3MTSsnzae3LI-UftcylGPQnkmzFmPZY1t9xQz56hUzHfRsg6gGsRZDD_11z0SXsP_RBvPq-xwMG2Nud75cPj0HUW9tWuJF-3BFzUz9K_sWSHsNv0ChecPtbMnNOlv3M6CIZbS1UhPnekMg4q_BHl8Pe', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7endNHKRwLha7l83xUeMd_4XEXduMsY1otcUEIjR1KRRTVv_LPvxWYUuO8vN9jpa9r_54BZ89Bo8qt8BzJ3Lmco4zoZrlG2_xP-tBTYEfDVnkdiPEohQ_6YWB7gcSG_OiZoI97iHH_Qgimh1hpaqCrGgl7g-FPWjYW6Q9gPtSFBTruFnT6vPo_mIXxsiCd_QTxieTYl81TKS1rF9B2IGq94zotcBdLDADcFnotTqe9ZswpkGSOcthQ-XtDdLi_gapoezaKYOO3Lml0zZHN5r4R5XNm1naATkaje0R3jDg71Sw7rhBV8S2uEafkwhbs6HonQlNI_ocF8hHg0f15AfD9MKSSnSyCINyGoVRnFyYnsQ91djTI6gA_vEYL3VgIEzZ5UrGxErJ-0OR2EN4x1oBoirVo3J2FCa5YR61BEbwOFUppQnLd9lhJhf4__wGZ5TkfGOTnvWvM5JbrY0n3bj5NhDUSH2e4oAnO2yl1JHwUixiNrJOdPrgqih_5yP7ZjSFMVLNrnRDpkQjEYu6D2U2U7GI8DmKGCv7zb5OJweZaSVAfheM_MBdOYOZ2PlLQE8IHjdJx7FRD7Rc', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7eoM61sogx3ZjdZdS7zT0cLZ6khDvzwgw881s6G9CHs4g05YBw_uMwBP3MsleNKpj7LyXvC0kWjIS5zNeXYX9MeceBrSEEJvMHByMuz5MLkNk-wHSs_fOud_ATOD7BeZtTBxTKrTNgVaeYXBqPC-A2T6OwRVTH378o802xLo-AX74zoQ4_nTEOUsoiK1-mIF6B-zRMEPpezE5jqW2vjlylno-8BDX8LNEOW6G0djp6crGfWQ9RANZDQdKjxfAf3g_1xtDQpZyWNExRl0_ma7x790omJ74W1LUZYqdwCvmCzpjBFAgxONHyTf_dMRm3f5NwCNg_ss36LNNJEQpGDzz8OIcB5Jj2IBwmUzQadJVz78B8gZUHb7H66Qvwuhw56JaYa9_CX8NEAjB7zg_IvcOrXf9fZxUAcCmhOplva5LI3X4C2-PNZdnJ4kqM99qNzRDplP3_Bs8REIMJzI8NNHDWsFnLoUeJal9gRxSgqtYVK1y86okaUlxNLvNfIpOkG45ia4sFrSJ3bKBwAL60mJjHFZzlsZAh7AxcXS-lxZxYeD6_Brr4l5NQcrHDLi0FGfDZogY-KoZZeCx', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7eoM61sogx3ZjdZdS7zT0cLZ6khDvzwgw881s6G9CHs4g05YBw_uMwBP3MsleNKpj7LyXvC0kWjIS5zNeXYX9MeceBrSEEJvMHByMuz5MLkNk-wHSs_fOud_ATOD7BeZtTBxTKrTNgVaeYXBqPC-A2T6OwRVTH378o802xLo-AX74zoQ4_nTEOUsoiK1-mIF6B-zRMEPpezE5jqW2vjlylno-8BDX8LNEOW6G0djp6crGfWQ9RANZDQdKjxfAf3g_1xtDQpZyWNExRl0_ma7x790WPucseTaOpLc53meGUqqj7lt41LTX0u-LWxFCmtS3P0u_OiLYq0IwzePQOpt8sszDFENdSTJWGrOaLod5cw6cgVe5pXraOqOOCYz5Ken40mqwFhQSziLfvOFs5wE6hPup32LdjM3uTT-w75SaW5P8Jdch9ny01Tl-DAF9o32QqKMX4PxqeOO6MbwHVuOOciqTUWBVKKWe_vzf4LyklQLXC8IDjQqHScEuJtFsqBsCqAmLPRQQBK8ES4ISyOn66Ixs1FHPC1cSzA6z7LGye2wzsorNhQPQrUUUWd3sIE8rETwKNvrsBMmE', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7evCIjOY4SWKOlAPyEQwsgG4do3hjbebTbTL_YmfOZGwnzdjd9mvUSnq--3_a3nZdqJxHFG7hMVrHfJTVQhwUfEyoYvmkjbl6i_FlBmI31IUvbJ9UlWyiBPHEmmWY-O7WNbjhFRjTnN8dxTk4u6H29jnAfPARoLc7eEwXRRZBhW6Cv02YvOAlw4S6FpT4FzyJ5IV-4SS5_TZscsflhnK-9jUo_oMsmaEtivc15DAQviQzyV5wrJI_AR4mxg3TcHcux9YJBl1v1ERwFbzwJEL4Mh1cZu-yqjhspf1QWjEKrOwxzA3Fo6-2dEcpXDxAPeO-7ngsmC4-VPhfmsNOlIzjkfhx2p4R4ZEy7X6odgJ-GkUErtVAyla-io0Ijf0a4xX6-KeiVld74l9ybM19aOiD0YAzXh1yZkV3pkondszxOhHeTVljgGc91bmO-aeFH2BRh7pdg0ATPR0SiOwwSKy2mhBpV2ErsTTOZ5w1DQZp3mjPC7xj2n8zcmugSLL3IQEMCLaAFIuTVUS4mMfjyXYafm0UHKAQHNSDUY4DRJQr1WdCznoSgpJYNPYldRsga8aDdYsMiPfxIpgZ', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7euUrMnEqQBtXyfVNGQpDmrM3fjWaJ74hh5wQgfuANUzT2YRC3y8OHdNhgo8X7ADxaktFA49U10FfFiXNblXvI-fxZHf1W6C0V59CTpsoZvV8QOv124-PSMZsuqqcdZxJqqwP-KUqxKNCbZHJKnlcgyzgImaqcxslDE5We-H8C4nfJqyGoHBRqIsdMOCNkN4zyfYKG06cW4jxHcOXErYzqDVMbqXJlY87ZwIgnTkifkh5JRTRCQlFhcZPpWN5qYiYPc1pfqfeWWOIuJPUj3nIIbvR5Vi0FV9cLWotyfD953uff8O4cUZAHFQ-_FIxiMhwrrvusj5XYTFKp0JEIF44NyUh4nur3qhTcPKcWcz-3FOhYussXDhXJdSzM85jRCPtWSe427lSxTcgxCat_e50_qigVLj1Jcnf8bjhTr9EpXiIp_2BKBpjp3LvxWF46Go1JThJW2h6HwCPRqn11naqqLSoA5H9MuteK06G2xmigM-GhZWDDtq983EBvHhp58N_NU7Yjvrj5md8Y10p1AIdWpjtdD793g9B_qImWMGKnPUOAnNXVAxiFu1KLmPeAf0xbXh5cMM0PnS5', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7ejEOUI4O_hSo617k3YLL2Xj9dnlH-zRi2oji57DSnUDeguNa64vFPrJ-yyMWcRA0HznCWtzw_T2r7Cp8LMOhTYFpD_d-MJifw80FbYphcZiUPIpzWU39iVebb1O_D6tRyMCEzQm5L-L2NWzsqHI11_E_GUAsk6bwbtFmOeLU7kX13HVw5I_2aUFrDZH5lDoUixPCvhelehzG0kbLFSTBfpApyKuUgx0nnEjOelh58IX4zRLCDmS57VH7FdgOm3qNpsEXlSx1uvG_6tBN3OXLi6ynxB_JsHbqSVVog4MqjKRi0wR3nhbsVyGkzxzAyMVMf7E10QL71h2wyQlxnSDo6kcskki8ULUGAv_tXGMtO4XyGiFMpz8XCHlxU8VaB1qo2yrKXBjCKIK0hlGp-R5LlG8p5Nln9n5iKTSYZJElurB5a4LImOwo-7I48j8as7paZOkjOZQi5DBJTdCohIELo5sb4FJQ8FO88EAwxvS8bP8pt9T-xd1h9asQ28YYIN8WzacD2oS4hQ95ttKpUhYFJ51TaLmaSBoHnVxw_bJpESyLUiqsEvoU6qiJiqZ_UGODE6eJgZGWhIYJ', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7evRSWFrNgf_N90W2wWadO9eno5BvKVCaEiDdLYCgZ7OFvOdQe_H6l4Pnhu9DinFs3sy1ggqK0tJ842YP7P8HqWEENAxTtftxyXxcytVJME_fEWp_5BqBJiskxm-TEnk74fMytrB1N9c08SqsMi3uCKKNhu8Oy9rtlcIpZRZZZlrqS741ckFa55s83dlIrRf0_2vmkDibHBqNLIa8ctlH0qOJEQ0-cp_5L5oOUCyE7IeGsa4yD7gk94Fqc-U1QFAKMY841rb3dMqLaiIhnxn9WRSH0Bgt8BqN5QjHQ0RI225HC7XhFg0-FBDgsT59G0XC64LVWsjFE7XiLzM514OPloM31H3P9WWdBdtO537thW5IagtCQHlj0kOb1Gz0SC6o5dodK9floCZhs6NBQxs1X1ITBkaMV3l2tH3S32py86XmCutYmVvm-mQdLaMCht0X2mB6a9kQM_ruQLDMLiSvynDBX0sKRhNVp8vkiTr8rqv7thXmJ5yEBbuzCxzW7rA9BT8fcmnL1fPz9L1o3uuBXT7OuqsPcL1LINwxWpeDqMPOab-1G_uauT8VzjFYPXEDLxB5-xkMIzkp', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7eov1oyW9Xc54CjQa9sa7Fp5dYPBFbaf2hG9Akuu0ijPte_nKRtDQyeqLyoPbhRgtL2lZX3vsJkfOQjsepNAVSd7XnfLh4teVQyMr5CYt8rdp70P2u2TlodCxPK2zUDxdj0EyGdcAZmG9CielvSI3rZJrrGoqA6l0peV0b7KWE6Kg5NXPHXrvyx_IGIKNSaujUeXObUP_N79MLLIK0ijMaWH2fDQtGaowiNlYFzN6sMpU3cXmszXF1d7o2pk98hTDy2EYoSLH5CKWjBZs5E7Spoo-B4BW4QZaLf5-RqHLtp4O7PtrohWuVn50WNLyohGhlt8lHZx7XBcNnQ3q5bb7liXxSeOrY8Hj-OABS8FPl8sNCsCz93rarP96uNG2shGpYE196s1oxHmNjroM3y9PnFQn_3e92IMLpKctSWAwFxU8n1C9qVPDhDtZjpE4MpmWE0Wbv4ELcRUlrz2gTgl9mDXBJUE__uYsKk19-pAkWcfBU1FOJh_kpDPhItUHHaufmUYtmTVGsIhymD2YXEZptwhXiToYWdz5QSKi6FxJdemJisUHNqPdV6AdOIXyUHlikDwcg9jC2Cnd', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7euauWQj8tDVHNmVCJk7SCNi5AjwER4VQPuvA82uOpPRXe682dRl9z461g2A9spD1YKmJMblmRjDTEN3LjFM8NDSeD444BwtisNpEde-XKFAqRWp-Ob3KWl__lnLmVUJbQ95s24QvN-UKn0szTJhZzNy-dhvRVwNNCFZZsavJMLtnlu4J1wvBxXCjuvR7PZjsELLkijAWlMgRbwOs2cYqh-EGcpmnLt6UmpLjSuUj1a12jmm8gPMg__GhtmYA93KfO9VnoCalu7m805pvm8188dJtB8ojAMpv-z5OcDXJUUsOMR6G7_DGMzIv_J0NNTlrkF_OIY7TBLrKZ6F-_7OIoimC5mJgd8xTWthtDg8GNSLYGUXEzzPIdHOzSSeWpcq5UYJoUx425pYUo5YXv0GxhkU-xbxTc_W9MvUWzUTVwbsZP7OndD3jHKcFGykCvUbXztG0nhtEIObWjOGtt1hWp5Z2JteqGn9JptO0sZE34P13eRom8sp5DAZTNccso6ec9Bf51EdVNM5H6yZPumzEYEKJtrRnC08hgcD8X29kph6rAbqdb575Re5Nk-gUbnU2kOT8rAvTpWGE', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7emjHB8ChJlEICMxS5P5gervh7VwM7vpLMBJFROe8LClCV763svn9mTDRvevICLiuU5JTrOxi8SeTZ74A1wBUr4pb6l1AG8TsVSM85twDQ6hBBTrjAIQtbYrFJpeAOmgdYdA_7_CcB0HG6BiuxJ3FXQJqNqFfd5rZHQB3FjsapkJYxMzygbZ38kYDC2hbvQEYnBwW-0uDTj-QY8JASA-24bAwrbJqr4U3jyyQ5OjQFTWFRgXzFj5M2L252g8d14n-GABfMCYlj6R3RZoPwaqU_EasuWkxzUGHjtW38F8fgk3nAtLK7pCsAPyzcZS1oh2y1_ENerWucwduKPRbFFHmIFII0Do7xk56zDJd8Tddp-8tb4d0eHIjA8rSa98mEEDM8f2lMJ2tTHYyS3HIAj_eDXZB1oNq80sb8wiOyWJtkwHdWZAFzcF3Py_RC3sOMMLo_uTUmRcpvrtMGHtpYRb3FF8hENPAw07IeBpl-IYds9k38smjJSCCb2uKMCfn7JCLa1AEIsL3ybh2s9Hlv6-bBlJbP3uBKq3tZHP3MhCLEj3GfNkyDaBQExyG-JRYbkNkbuEp9dVpH_04', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7eoTbiwfshXfNNaObaSx1QKhGQGMoK4j3_n3fMA6ISK-Ie5NvpNnUOUkC2WrHhQonhEnaxB7UMTrvEzvY43uzZmezclSeWZQV7XNlccvbwh4Dg-qvnYEwOZ9Cc9ECummQUA0myqRW7PgJ317fzb6yGxxHs6GUBlewTlMw4grOHfM8d7YDBauJIhwoY0WjUru94Uk1hWgBaymCNRm51Pr0FhGKiuN8MyKv2PYTGvhk5pDOGwwB_sVG7aPFA6gGT_O_HMIkODjLdGtX-9IvVTGRt3shcdRf4g7VI0vdHiETD5_SP6nBBcDLvdYDvIbB42nT3jN8j3JyRB422kNkAvORMucQ9rXTWPe-D7UYY69Ug7xS020tqOhpQCKBlcO1XktY4x5zxUKeRP6t-W4S_C8tdlNYrbQ8MkLmNhTMTS9WtWGHLv_Y0v1ZrjQGQBM82TPtuU1Cc8aWzJZPXQzC0RBWKPsF9A0e599TD256scLZJAVxw8B0llysaz48zVfoq6Hc1s2HFrVzCkTZMDFKjgPInlykIsWjuihSDh6GayD_kYpEp2k-cokFINNZHHtfFGyWqlcLEuP3N3M6', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7eg5wfov8N8IfF3oMiD3v8BmAcfgAy8c3QWYUYjGPko-I4xviROsEeQvNguG3mIsaYFqvQchrztKVULaqzYvfLTgl3IFwjzz-2-dI7l7vtzFW--0TK9toisx54BAD-R54yBWykV00oHo-O9a_DMoFdB9xMdFc4TKNfQMgEevXkIHwO4XVfK9n7pUn19DmNe2IUC7XQiiAQ_NP3ddo8s_ebMb_iArDUZD3_TFPwv-VG7keIdXOdH_Gls7EbmxxPV_-Srk4P2EPVrvpm8SMEKEkT2-3W9aiUx6z0eWHukrmemRYGb8DgzLZREBcW1GG76LbW-mTVj5G4YQPbF0WFmFZHEnfVVE7Doxa8bu481t9ZRk6kj12iqkM_Q23RUpC3kyLaeW9kdql0AS2I4MF4o45TkLeM4WN2f7Od_2tf6H_wh7lYYZH3EiQS__oRtQnxsKt6Rsi2gZAjk54TjyHi6oyWEhzmoHqVwxCtN3rNYtKiI3LEjHoW46a--cOo5Pdh2ugdb7ScjWXaqahllquGJmh2GubxC182Gl1k9h20PQsrNEauxFHeDGc5sUaWEvwS1Z-YQpd4mPCWVIC', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7erOGV2kzpGylthaSYY7CeSBgh8ayp7Cy4uoN7iQex0rdyhG-6GDJLXqkE5bdcp1DAgXEGH58tceg1hERhIAfap2UiqLrszkyuHaGLydwIG1s2lxAOY1NNb4aioTBhHcrQg-iu4VG2LJlLwsxPt7OIJt6aQb1qOccA_yhx5HcEJHpzLGIDG0BuID9wc4Gf-zdfdd6vb3LK2QOBKTIbtXEmYme2hhKTEFOjHRoHgPR8B7rPk1TBwQm0aDHIaxDquXRKP69EmF_LyeF9SrN2p2JOohU04iLpIKoXaPIvNqbUjrk7XDzX_f3RePJwW3QNTt5BdIOaiX6UlWjO0GITDGnm1d4EVuG83vBq9m5WT_0CaDezqYAuchUmo0X18N9r8LD_ybJxldeJYEJVI4FdGR05tqQFqQGJFHClDzHIsiujOS1UHzZuVUryhtJurCVOIZsgRfAsfEvWv_FAG_af2BYLjX28cTzk8Lm9zCcLd4ASZdPIl1_fcin_SvT6EZ9GE30jlv1jJl6tdIbPSjgXnpXV3QKBuVijHtntDr_I2SKBlkRo-EGvN22c8Yw_2q6owxzc17lHHwDQ5uO', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7ejYMFyMbCx26C77eQrf5utmWKrXqzYn-5aWZTO5AORmmuusXnWrsuYpJ5x96Qaqw3skNSrV65zS-z1nSlnGkUqp6F9lGeWRJ8k4Dq7iwyEZ8X1mP7GM0MhiIulgmCaK9TBGZfjaBo41UxKGlCsWtObzu35ctX2_vsNlwerJRZtrMgRzpcjsZyxf9ddKKwRzodfK4CT2jVdXu0eB4E0GVFLwcsIFeeU4F1UI9QJZ_Fl_9lib-Qu33J7R1bB3vcdfZHuq-1EU8crp9EqCYy58dWA6yS8mzLfRITNb4449X3gAkSb7REQ5imz1U_5JaFDFqHNsNcqa1w2iMBVfh6Tt4ix5NiWlx41y0aDGe6Z-FA3n34qXdvgO92EsnK0F4NsEENdcFPNdLqcqhH9a4yLq3jfOiSAHCwUtOWK6O_NrUNocViPWz__4Rm2Gm40xRbM6zmIqOOB_1x8fxOQztvgPXfWQYYLLI_XmYUdWmduPT19ykvtqwqbJifluIbpPPuOrvsfeQg1--h8uwCUEjWwAwpCAfrZ4SHIgkLQTFjmCRJrG1fPAzNdoeb8XNcM4zn65OJwj5AKJkvMQ0', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7ekR_ex1F1FtIseqRK9DEhvPBVi3EUefHJlB8TEyaG-e4GR4dIox-CDrsZwjOzDBE9O5sryXMLn5eHK44lWDxBFu0atrTTrNsBtnSqONY8qv-HinU8ltTpO-AnsJGUvyk7ztv8O0YU2_byozY16W4rcW4eVwH8DLPv_Kkfa02kelcV4BwKEfzGdKMdtp_1jqWQdnTJqhfKexExIH4YuBv-MVA2p91pMY1bPR2ti3nY1ULpFkhLKIRGFkIQuDmKb0o6NU10txZpdaSKAXl7xJN0j3QlyBoncM_M7NHsqp0aJAviDi6ovB1ErxsTHeh6M7S4dw7WETzpet_nyu3ERnn_6Z3W8kPgLnsHjMejK5GxayVaxFkUs732H18m7soE5spSCoQdv-VBSvK_gFdCil__vTQK7TDcslGj862pfeA4eQYY7vRnyEfPNqQhs-VHIonHzDBmSN49J0QdKGdSZTGlnB8v7Yqq5MpXpeKk_QLHo_qneBNm4Z-HjDZv_KGfXme8t5X9f-pY80MFKwq3400uABkCDk22Xr4GfruS_-PDJlKyXAmqyujtwIr3DRGrDh7z2koAgrmLGZL', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7eja3Z_ujuT8CiRM-uie44S-EbnWzsT5BegFi9YHLYdWOhyEcAjIKB53PnJh5y6ULz5-0boCrGPO8j9gUpc1pRngrJlnTKtjVNopP8BbypczFikaLKhLI1HAcDarX6_WhQ-PCZVnMN2FB1EZ5-SYCbNZpyJ7vBpanhNUvqXm-wxwvae8AHoqJ0wZNqgK-JgUv8Ogkx2NCw847DvpKj8Fc1_q971rMs1UimsHSDfoxo5bL1N5VW7CmoBvrkQP3TzUzz8xb7w8fUvx-rON1OyDawne7A6hBTz2jpDxXPaPL4cnLqMUgQDoEXfTHeP2VTYwGLbFKR_ceG-ijNOfb0_t8PmK7SlA70Kfs5b3hNUX5McuGdDdFXnKZSID_9xzASl80hHLCmneRzN1QrDtg2PAjadZ789Uh0lkmn5VtBwzLBJUGg1s46X0Y179bXM9Ymob8c9m8TCxvDAwZvX7zFNFEATHCboOLi42CVzDCmniC5W0jCd-HnEJOXLxRnZah05PtqKNimpnOEiNSbvaAjVQiGVfPdh2QVK0qeHN6GrawZ4ZBtdijLEAZSonHO3qC9zXtCjDQC6NijrCX', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7eoTbiwfshXfNNaObaSx1QKhGQGMoK4j3_n3fMA6ISK-Ie5NvpNnUOUkC2WrHhQonhEnaxB7UMTrvEzvY43uzZmezclSeWZQV7XNlccvbwh4Dg-qvnYEwOZ9Cc9ECummQUA0myqRW7PgJ317fzb6yGxxHs6GUBlewTlMw4grOHfM8d7YDBauJIhwoY0WjUru94Uk1hWgBaymCNRm51Pr0FhGKiuN8MyKv2PYTGvhk5pDOGwwB_sVG7aPFA6gGT_O_HMIkODjLdGtX1cBwePcflCHof2b5gx-fNhr4-Kf_j2ffX41dVWrA-7k5I2-Kr9H-rEA1IRYd-KHHDTkW16onlQXaALOwNAjzmYBeKoteHusAOIhalAB1BTdtUL6XVYtpLIKLbSMeghoS9lNXu-G0L8pHBcbF8no8uQPn5uxlF46sqKLzPVLZ23qCR6ItS0kGKPq1oALURL-1O15ZUVT1P8nbmkkV_3_CqR0CAc3u7DJZSQv_zG_ViZ_QeResc0OQSqH_TAsLfvmTlXnVjgldb7gZ72iLeDF0I1ThyXqQVvR9Qwvz3tife_cKtt4vH5Ji2ivi-UTp6Eag', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7erjB9xjtYoDEf1_a1OT1mQR5IQvsZ8Mr-cwWyW4zOxTAFe_F7jqxxr1WtUK5S0m92avESl4TiFG84ZMJRPpsrGjfDe7yjYHDXVYHj0Qw4Y2FocVo4ra1Pqs5UowlvgXXR3KWbvf8ZC3mjg-8Kg4eRpD1tH2yqmLx78t8vxEAfNMOIetgHh2LNE7buJaOryKxD2iUGuzqZlDezuBPtysbv6VzuiI6z1x5pds-qqdfiOQFkMB9HwoJpI2Gi09CCl_BFXz08pDDLn2AsGwG8kUBunBCxfj1tigZh7uAzatKN7dI9FZitmA865bSN11GHxloA4aYPi65ngGWHMRw-1pMlNjeAALBnXZoj7H_6YfAj_05122chpjFg_dcjvB3XWUdtSHjP4RXURN5Ip-airpzdOdmaZ460THi0FbjKzMU4XJ2Ro7EVBJs-yBIdn-ykyW2LlRezoe2NnuqWp-SSME9qVqiSwyIIpFl7A_ZpOIOd0jzUpqjVw0EBiJRxRD8v2bBVqJMrI_GFYbwt9Tr0hGMWVqo4j1bf_YBJ2332t5-eYXMr-1tFXyRnM9YUfU_80j8wcT5cO4peE5K', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7eo2wU1OjwBJ3kZapdTSxC-0tO6ADVk0j1FIpZQK7WsHHKe9yKzdyS3Sl-p9wxKiNzY21LY-juC5BUNq596dJnIQE5kXxVBt9wmLPnEeSGDcRWjiOw75lokj7cJKhUOvpVh3KBI1WOaQD1swYNLZzh0bIMoi-Sjt3Cyos-dH1XtCfRtBE-pD80LCabwiSvI6yolqed6vvGwlJ-Ac50kLXUw1eY2_01i-mjI3SL2qqZbRbKnaT_-b8ybyltygfJTrNcQ_YNThzvvBRuiDHDkhcR_KKjJdiIxgtIqQDwJS_QgqWgW8pVu2PWHzshOcbMLe-e7rpBKUOUZkmeXSZWcbtenVkDGMCKz8EbfKD_saqQ1n2Iq_6yw5w3lffjjx1J7jScD1OPrhWSz3wvGNvgHzoWTv5NcpTeHJZuThYMgGRF74DyIl9bkYBYOSAPW0s0epXAY494M2b7pOy0LnN420ziPqKrY2lQmyj-HdGwfD4cZzSx0izWB6B5ozPWaT0pR8Pw2SGmpb_J5OnRDaDSiJlCZkDCPgdaumStPEDvBoCQC_2yOt1aRLSd5wAcDMSh2nm9ZA8Yt8jDU42', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7ek2b6x2DaFZgawhTr1MXSLR6Mjt9apn02hHzmpt2UcJHCEtFjd7VFnKubEYl3vdhaGDOZp0WL3c9PzRCgp7ROnJCgMcHo5mWBCVSniw90oQDyl2U7jNIkOrRxH0v-IjISe3UAvFTL8mLoHAN-yqXLUhjyi-VADuHzDvmNFBAAr2OjTlMM6VbMLzweESxqYxu-rh3BbnhF-s8iqok3RvZvp89CCf67L_5eKUGUtYxrFjYbQ3C9ucZODcyFGuAslmE25zb-AqpcEWkH2LWxkKzVktc3I1UyoN_lA5h0TVk-2ooiYxfEl2tPZPchF-m-WRwla5jyC0LoU9Yu9uOTqLCvlXqq03uj6CFwv_6d-m-fUxh4IJ-ZePsK2AS57DLGh_q7wYyy1-_JUMep0KKch8hKzBNrllW0Elu8BF9rrLzf57AD0dxnITEaJqSnvpGbdafbb3QLzV08kzt3CPN39CHwx9tPC3Ia3bkA-3r8ZXBjb5obkA2uwruRQOtNDY4-zXCrvTPOG8kkRs_tUN3_kq_8-HyWmkQYvPcqNyVtuIVg0c54kLNL9JATqSYxWS587lbQUTRntS96LIi', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7evlAJqannUJPlRDO0AiCaLegIo3ODJtFXC1f6lT_v3DNWxxjAHzPONgsZWwOejd5l6UuP3RWJ9AKiTcDJKkpuKDkXi9nVlCijfOPW9J8uYk6aFRuCzXRTEKtMyYigpfIP4IflMcexrcyxQ-8yRyDT0lfQBQiF6I5-ajFAehKj_U7Q1DxtGr9xZhdP59OLIWsMXchz1Mj2fnNa0jc4hAB_FSRdvCbCC-b7ErBND1O-Tpx0pWxsbz7TacM7jnrKs4ToBlDyMc14C5mLK0b2KrXW1rJgeeDstZeIDydDpZ9aKB0EZKrH7-0_L4vY-HFRkLCtI-auwK09oo6AST4Xnrvgi7nccEVjiwh98DErDeXhO9VOmTG_fGOTSTxMQfI3McNiz6vjn75C3XHd0Rt990NwaOMMSCdpp4IX39ZtJKDAkgDgJyX9YlfjrmqHJD5XsAOw7i12r_NAQ4QaVu2Dyo6dpTFbMu91pM4ybgT3rONSPMoqo-HNfrwE-tiaSMNP52mKkwgBuIuCm811EtJv_vGR8Qm5h83ywrgYDfcaSeqa5QVwnEEeghkMQGJR42WZ0wqHCAdpABEE6PM', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7epVaQBDb1fXPeF7idfWsumHNa0Y_YTBB-Htd4gp2d4KrB0g68zF8m0li93eHnQkreBaKdsnVi4cezXaTiQ35_GmqdCMI56w_Qy40guD0_Pl8-kCUE84vdddabsz42mix2agDiaHhNXVhpaWU0DpYqsn0wISgRRaKQe-v4EFEbOgJZAHzWNVCJblOUzOKuB7IPDgrftfnhs0LCaH1zdY4H_xkbiFVnxBEJ76UMjaIyhs93VJ725Sc8b9xyS_1WfHDD710IiF-EgLSWMTO4oTvkkBYpZpQqRVlKPBQg1Sq2G1bRcU2MNkXa6h5_0mXqlVMYaAtoYq_aGksFgFsdpGzSQL55vBZ06sm9-uzw7ntAyFa9dDVCe5-L2wawZM3VrXW9Yvzf6ERPRbtc_k06uXMAA-_v78o2Ha5G4vkJx9hn30R6DQHhrzBr0h3s-vOR-59LeTTtTDRoZKzbQ2qRIlXVJHHftRQshFTo-iZWcTyB-sHx4aUkDcUa-V-42IyQas8oAnYMD5U4abjx4hHsSqofcr6YI8ia_YLucv4CEk4SZBXYcB2Lze4F6aO3TjbVzgiDTk2zMvpZc0K', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7entqw8B4g0VhNoLB0CVf6IcLIP-5zfPgr0BOkfNPZPTvyNOext7-m3jfxRO24TZdbQUnEoYHbZNsg3C3IJFeVj4YYbB4DyFWSu6tmLVmxFpJ5nDMWPim6vNXHQXel15EDO7J0SKDFrjBeOO7EM9_SJ2BQqs1CUloYEEjVk0x_e1K5-HPIzvevf4EQ5qX8rM-HLeAah7ZeL4MnpXWjPKYQzSsb78IPFZIGJ6SFmHQZrB2irMYPkmllO24xrfrbkIttTyKlYHxgWpVPANOL0gVg9OWnT205XQO1ziKILHPU4L_ahQJayQVAwE0njfF3AEeEIuZj6t91h_MEg9s6ODrPnKrwlQ5KYGQldiaHtdSLzWsR42ZE43dFVtMl82PRShUKREih2hlMrYBtIVcy3Eedq1d8sZn5wKyD8BjW4EgMmWWJANvfD_PefUkemyv-0dfDcqmXrDCDo1A6x6HtYx6_1gKLEk6iI_1Bx7acyS9K8gnw9aEIMgFYsrFCvRhvQocF5HzFl5k_MUwcPRpnDegktI8PML2PmxGAr8Neuy3jrBIDXNTNps0h04YTk7gckBDtpT2I06XAOUh', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7esvs-LSELAAznt_bih0MrI8Tf5Q-Y08cK42FIH7OKkuTSzJwUryO4EgYc8mcZHvSMlq6xZUlyHCtCytOF7zHNTc4Hd-soYG8KHScxsRbP5Hmgi6AUbfy11xw3cZu5RVfblI9pPpoIZ2oNfH0EMRBs4CJD93qAt0uZyeRo-CyONWcnzetdXPvEzYCN0g1ETQgzmHE5iYW-VXFekhKtcMM5RdqsqqQ9dPfUzhavKmbHKE8DaG9Z9ii9ovrtL6biL3-Xngk1CM4XGpu4KrRisKCAbHN0Kjyf1f5qzLliK9H-jNXvqiHAKT8zjC0zShXQGrFHLQyJcYmevnPuVt0feiWpadoy5mqL1tiCTKTVMo_HpJJ6Ta09axUMPoMufiS3V99nsTCub9trLO1ezwq5SrNt-7AN3YAFmtIgX5bnvhYX6pyE1JryyMYiyHMs3dPhEeTKMBdA58Ekc1tIUc5CIH2LT-X0KppylZhLmBUhPxNqXkNvAMHqN-4GxymF48pnrcOkuBA7Y__n5EfsF1lBqy_m4MW5mYljwuATh_pduMGvGk3Gy5JrIJ_trAPEIqjOK1k5AJobqC464Ew', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7eq6bCg9G3rdTrnqA9p5uiM6oOE-ZQoF-V39RBbDckfby3J7pLDAT01C9h1KdK__v0sfFAMPOqxoZLybxOdo690qTi1GgXQ1F5krCoES-d6_FkiTYhLM-RrnvnIJP3cpBig1QtCcSkLmoH20jTo7g7LLiNHS0ukGzh0UnISw_UxsURnwy_yY4ZRpu8wNfvyllvvXIcOFoRNWosQIUTf9rEe16pdalr9ESnsWz8SDpDEIL8gYS8LcD_DaquhT-ZuOFGCLCS8Xv89LpPe_9FpzTId-lKbq_c09SetiFhDuCG0ZYN6pHCOAoFwSvYD3URPaO-9QJAeqo6FWiQew6vkZp3Y6r76CxkiEf7tQTly3EDepCrgrorIG50gK6nllZIrqTI3EhXm1OLpAu3Xb6-2jxToBcaahM8Fffnx-RPBy1giYnv6mYQqcJqo7lcN12Ki2Iywutln8NIUSksRztnibBxMpXh0xHeo1zm9yGq6YK05n0tUfMRJvwDagJsannP9ASB0bEX7dsgrURhhMUzTSbnWb20FdpI4X9wGlyFOxSlnuKNqsykpWFYiHy3oGQhNbU89JT-PGS1UGB', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7egGGrswqlMQWF3PWyGORZWSjJKmhOVMf0tzt-TgZgQppHNyBFBOHI7yLnpG6q2Hpfzbrd8XGIqNQxvdheSmA4gdRtA2aLWIiAmY5T5DfWLmXmx-BbC5ZCvdaLv_mUEEpyJKwN8RCwOL8ZOOB9MiZUo2ytHj3TbNwH4AOxf_GsMRlE-2dCNlZ92i966KPKfrmSB8NDRqdO4V6TIfwpSx2j2-8IG3WkJAhm3CqqEZ0A-YzkggP-Vj5TFk_OfxwHYWOtoaAb01xmF2qYf3V_KE2xhYkwO6PVe1Fza9l2z9jfYkR4juUQrrz6LgM-FIqBipCKhbayvEr_6x91Z6Vm_5U6xZWUvUD2sMTXrHuE6gUQ0_fNFODTz_xVr_fkK5XrD6zUcFSvTqtKcpHEHPmkEuun6K2TR03SB4r9qOCmELwBzIWmikFAf9vsSmzeVgL9HfHhxudMy4wIcKqiukqjWmVmHu1Kr4ZqiImmMLPYLya9z6SfRzon7LXK1jJvnFPcxiXc_pzk_l_NGpEGM76dAHm8d1XiwzU0adSFB8Habi3WIjrT3BHLYjtKH-ky8heZrWDwWa6Ok-KXM1v', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7ekaxLlEJHC1MIDzt9sJ7s72jmjxHPs-j-0cV_bz7-pJg1VMBK-FnmvoPlbnpowuJkIvaVSZ9PjMm-c9FvY3KY7DaHBk2GjbxGf7GEH_OY-4GVuktWfJ5alsK5fTNmSy9Hwkd9kAiebZHMmMc42dFdBIM5z6f_ZRtGgJONwNZBIfVir0z67WQaf30bxTE_Gf7eYOUv4WIAXD3qeg0pvAAvDJ8JTfSPfgCxz4KTa6vm1lNdFfpCAkvOu7DyLxHUVM3srG64Et9My59z5KQOlVd2JNdKgOvTarNz56rDZ3ScrIvEuZBfOgMteM-qHaS8NZC9-d8vCrX-uYSnlBC___nU3nv1UfExS2bzXWwNRG3G4EMAs8Ofef0ae6Xg1fCOPKQ4e4W_Ql0DC0JiMpW8udUc10pAwbDrYb4vColC3tvMkDBQXR1tC0mwBO5AcZOqNp7WT3M_ao4KluyIS7DzzT4exGqRy_9QSayhqF3sZ5zY3YxqHkx2OnOlQMsgEpw7FNx9sB8if4IQ04iIBbHYfI9QjoiNM03mM-CLrng0kQRtRUZ7SYpsOYyuWBb8c3WCS7zP4WpR4eXjZo5', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7es-uOow352GHsnC2DMloJ-BlABSZ0O2qftVwoTl7B5mEv2QpfXLcMqeVoXQjJrbSm555oscRdv8e0eAxdykbLFgxtuD_B578kdOG_3VQkrHr5PqdXrOCUIjxUFOtoVetMt2fwwfWxPSEQkoTlVefcotROoIDeHoceJ5PZhUcawIvU0-EsUvEv_8wj3wiKeVm7fdbR-YBc-lB9UUXS6IZfBsXqURwmunWksV2ZGVb2y6F_eBM2obV0z_Bp1PLqyWdyLYC0wSm_visGFhfGkpK1-9JgdBL4ElqV0IpsFJUtbqMUK-F6mysda9n-t3MLdjTHXJAtz5iGaBfEskKzl66_uWpSOb8PrgGAq5ZMmFMi47ws0ZoxVX3OxoD3C_hwyz9BvTctllCRZrtYrASleXyI4GjMxLs4W3T9D3qMUekvyWe5ltGbOJL9LfyYi2dD1aCBaOxR1Ukc4sBMLCRIBmeLmJw6IpS8pQhTgc50XLxy4INy94DOAtDLcQiEAVCUbYrP7sCQJXCtkZxb2BlU2_Nlq1kekn9woLFSyUGTW1ddWDQiH4O81cMrWMkxB4iForZWRHB2paHk7cW', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7ejuzcZb2xz7LIHpk4zluwR1wAR02tyxwC_MqP_qrpCgNY-u-2HwKBE2Y10s4JwGULYQMmWOnsMO0A1roXCrtNLGWC8yX00-N4R_FV3fjMpep6aMQJas34vAvWuiRcAOlCAwoZuyWyLRLHC9CYlMLt4c9mb9t-iUEskMMQN0lHP9yv_OeB3vZ_0zFD1Wa7jL5lR6YJx6o3pB5K66SCPrHgtG76SexXEbNV-cieMnCHda1aSk6XzLZLNuOwzuEGcsTOGPtWmcpl50ybfgs7oweR22bIHjUWKEaxQbr-W_MXXm7mbKg-PUzSl9Ncl4Marjt1F1MEQbrtxHfr1VqrmrDK88Q4AV5lWdAIn2-NXCe4OUQ6FtOqD75nhv30GPNDXq33W6gfmPiYN-RhwL84k2h_r4SShrRGapszaeWGQqha8vy_YiQAxkmiJylt3T9HoXe4nu8WeMlWsfUKWsiclwmysE4oAxSlyyBmq485yvWRwwgFps_MRVNzMOStl78SIP7nTfQ6OJJAEAjqh6dmqEWDZBjRshatlF2vifhIgvfZmEJxZrIWLvzTaggpBAgmx3Fsl9VYX8eM0kH', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7ehS4YE70mkLwd-JJX7_M2yuvLlPF2Sai4r9Xg-R1KN1JcUuJ1h3IBI3pnCi1DZjat-8RZXJjMe2jYyh1Kr4zDMVOdZtsRASQ04oZqyMEUW8g80VQX0xLbcXq0wn5GwpyMwLZImVIMPkZY8R3za97ZJE3nPhyFdZZERJJVuVtkd8Tdg0naNAf8BmHxAG2EjLJAbn2hygZ_KfbeH_9tbYGdBUVuJKO59yMhvXdJ_qzT2iBJ2yoGAf87-NF-A3xdxT06drepiuuw2WBJdry9yAFpIpERfqgnFybnLypOtZ69yzW1MySnMCwZfGXTMU9D8z67wGPaHiVaZq7YOhc1_RlBVtQRYPRnmsh9nWQCto7i5Q2kA1mc0e4PRwHDXMJb1bd4EEhJY5pRz5bWoGXeJ-vlQseJ6ih3N4WQNk5gXuJOUzrQa5auznS0g9NHTaJYI7A4zJbbedDcajJlEdHpmckA-sT0kS6alqnLJCH_U14FtjhfzqD_lTAgdfzPqveZoRYI48G8qJPhRLkrBdadRWOahioyVUIUTLysIvtO8NfMry0ViUh9ZR8zgwBowj8nyc6evR1nownCh7h', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7ephxu27tjQByt_wnbUnkeNyt5M1J82EnpHVea6gc5QrrP9WtGB3zm0gZpXfrmgtkTED37PkNMOi2ZdYIPumHOuSqBBsaN7K7fKJNcYAQJMMETcU0MkOLN-kNybUsnhiNpShGS9wntxRPx7pgEFF0ey3JGxbNszT_2Ww1Ik83LE5aL1asU6zLISQsAtUDml8rbE_jSbrOVfdOUJxk_ffJpdengwBMZ30P8FVOjoD6354uJ81obmTSVbxK1kIb2xFOcklzj1QivEciJPg_-LzXG7y-JaQfzLdadO2gCo2BJX_M4E9lSoF4o45yEQoom-u3bu4Pacx-fi_tzvOgNfR4rE2Ir3f12Fp464Pkcp4O_1DW2poQ28FCVO5nv0aBr7LtwYPxpYeFOh1PLl-zv7uFufWsCbt9B_ZmmETcJZnZpNIpSYjz-aqIpeCrklrwNfLlHyBlCFFb2LLUscxGB8cIxDE_fsUMw5t9ytG6sy5v6B9w34QUCo9cvHD8u7z7Z7h9TLdqqGUnnaMF3wRDSaEvCyXhHZ8MaYyZDCcUst9cDRW_uM522FPT2HfDT387kzW41Elw4CR2NwDC', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7epaAh5r-lETAzwHsi-qrAt03zUYUL4w5I3wQIObMmtOlhViNbbd3yuMCgslKNEg2v2XpkSWDHouhWtQ7RWCemciHUe2hZLbfGGuucFBpw2nalXGqyQgCmoGF69qzFYam9-Dwpz6bVuE6fAkz0dEv6LpAiarPVyWfrm0yZV4GW9CEn6Z5SVzXLTIE5JjYf-j5-RjnPCPFRG0Qunob8gLvTMz86Og9J69DSfy9pV52S2bpWOVxQapBYDhjlZHab2YZEuFvtyZZaFsoGHZJceFXHR9aBLVvoKKSE6hpDtdBguXSJ0xh6IL5NqT8K4KsvNzpwt6bvWu_ZtEym1Vmb8r6pK_b4pk86eozUqnG7r3QQ9Df68okFQ7YfyHskR5koMqmyXbjDP_baAyhGdbX9d_7rK34cG8Tsq5uUgO0kZSFYbxH0HoYPrrS2EO59mXnJrVXuTyB-byrrIbaUpnUFZWz6WTavPjMGPqf5I9tE6W9OrVu_iys6d8nnXNMkoGcfP4B5qk2AMboLgK6W4-tk8xJPBEpd5G_D8gUJCvHv8rQWikW8jizuz9OBYj3oqGc2ZKiFYcwXDFsC8XR', 'p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_fCKUB9tB51NX-3_Fd6evgMFK-0EfYKeLg3pj1_E6-eTCkngeTcxyzk4XUJR62ybmmePFUpfp6p7-0_zbGMY4yjjxIZm32TrP7DtwdpOq1Ok4jQ5ckca1JLR71YHtYBk6dxpAmSUXPshAYeNtR4CqeYDA1mMp--UiyK0Ap1oSga0CWUEXGye5STdFaYAI2aYd1_dxBioNb4qnhsk8viOmoUExcObt4eO8xR_BrPQkyEzH6qInybB7en-fEKV0m2gHreSYyzLA6Fg9rjlaY40EUFy0_beo0XebMX_A2_3jGfYuh-1tyRkaFlLPxH2bDdIGkFnwTrrOSZqGZNBnf86gBjXwhcAoNLdvnRo9yGAdrs3P_xOGW2KGycaneJuYCfTwZQkzd3q3v4P6EiCBnSglO--jRRY4uA93RsnYRsDvmzCTUXzrsddNrtLmFunkgbUi-C8iMttHZiiuC0viQDjjPlRJgQEmiN3ckSApQV5xEAvj6zqNfOeZOIv025JqsfWAyQwJ7Ex_5gbxngYTG52R3aLXYYDNIJ6bFRTfZLYoZGaVEcCzHI6MI0eB7f91U6yAUz5niN_qHLaBxqYpwoVWlhTsZ0KHDCwrPrOpb7_VFhuGjsUIf84EJg0FQWTA-25ZsPRuZBqwnhZWFH1xRvbb3l5aBi7JMXB6Tonv2kO4rlv27EhMSFMpvaWjfNsYgello2iGphp0TBc6MGGTB-brUzMpDQabfMhMlNGNyLZ55T9OZcnt3477R0SwxkdtVud7VmPWf8s2cVigb3BvA5BbTHOrPXcOA20V8Q6oZYB7LUkKO1mgyYgB4vffHr0bx7XC'], timebodyVal ="";
let YouthBody = $.getdata('youth_autoread')||$.getdata("zqgetbody_body");
let smallzq = $.getdata('youth_cut');
let indexLast = $.getdata('zqbody_index');
let artsnum = 0, videosnum = 0;
let videoscore = 0,readscore = 0;
let artArr = [], delbody = 0;
if (isGetbody = typeof $request !==`undefined`) {
   Getbody();
   $.done()
} 
let lastIndex = $.getdata('zqbody_index')
if (!$.isNode() && !YouthBody == true) {
    $.log("您未获取阅读请求，请求阅读后获取")
    $.msg($.name, "您未获取阅读请求，请求阅读后获取", "", {
        'open-url': "https://kandian.wkandian.com/u/UnEWm"
    })
    $.done()
} else if (!$.isNode() && YouthBody.indexOf("&") == -1) {
    ReadArr.push(YouthBody)
} else {
    if ($.isNode()) {
        if (process.env.YOUTH_READ && process.env.YOUTH_READ.indexOf('&') > -1) {
            YouthBodys = process.env.YOUTH_READ.split('&');
            console.log(`您选择的是用"&"隔开\n`)
        } else if (process.env.YOUTH_READ && process.env.YOUTH_READ.indexOf('\n') > -1) {
            YouthBodys = process.env.YOUTH_READ.split('\n');
            console.log(`您选择的是用换行隔开\n`)
        } else {
            YouthBodys = [process.env.YOUTH_READ]
        }
    } else if (!$.isNode() && YouthBody.indexOf("&") > -1) {
        YouthBodys = YouthBody.split("&")
    };
    Object.keys(YouthBodys).forEach((item) => {
        if (YouthBodys[item]) {
            ReadArr.push(YouthBodys[item])
        }
    })
}
timeZone = new Date().getTimezoneOffset() / 60;
timestamp = Date.now() + (8 + timeZone) * 60 * 60 * 1000;
bjTime = new Date(timestamp).toLocaleString('zh', {
    hour12: false,
    timeZoneName: 'long'
});
console.log(`\n === 脚本执行 ${bjTime} ===\n`);
$.log("******** 您共获取" + ReadArr.length + "次阅读请求，任务开始 *******")

!(async() => {
    if (!ReadArr[0]) {
        console.log($.name, '【提示】请把抓包的请求体填入Github 的 Secrets 中，请以&隔开')
        return;
    }
if (!$.isNode()) {
  $.begin = indexLast ? parseInt(indexLast) : 1;
  if ($.begin + 1 < ReadArr.length) {
    $.log("\n上次运行到第" + $.begin + "次终止，本次从" + (parseInt($.begin) + 1) + "次开始");
  } else {
    $.log("由于上次缩减剩余请求数已小于总请求数，本次从头开始");
    indexLast = 0,
    $.begin = 0
  }
} else {
  indexLast = 0,
  $.begin = 0
}
    if (smallzq == "true") {
        $.log("     请注意缩减请求开关已打开‼️\n     如不需要    请强制停止\n     关闭Boxjs缩减请求开关")
    };
    $.index = 0, readtimes="";
    for (var i = indexLast ? indexLast : 0; i < ReadArr.length; i++) {
        if (ReadArr[i]) {
            articlebody = ReadArr[i];
            $.index = $.index + 1;
            $.log(`-------------------------\n开始中青看点第${$.index}次阅读\n`);
            await bodyInfo();
        }
    };
    $.log("\n……………………………………………………………………\n\n本次共删除" + delbody + "个请求，剩余" + (ReadArr.length - delbody) + "个请求");
    $.log("本次共阅读" + artsnum + "次资讯，共获得" + readscore + "青豆\n观看" + videosnum + "次视频，获得" + videoscore + "青豆(不含0青豆次数)\n");
    console.log(`-------------------------\n\n中青看点共完成${$.index}次阅读，共计获得${readscore+videoscore}个青豆，阅读请求全部结束`);
    $.msg($.name, `本次运行共完成${$.index}次阅读，共计获得${readscore+videoscore}个青豆`,"删除"+delbody+"个请求"+(readtimes?"，阅读时长"+parseInt(readtimes)+"分钟":""))
})()
    .catch((e) => $.logErr(e))
    .finally(() => $.done())

function bodyInfo() {
    return new Promise((resolve, reject) => {
        $.get(batHost('article/info/get.json?' + articlebody), async(error, resp, data) => {
            let bodyobj = JSON.parse(data);
            //$.log(JSON.stringify(bodyobj,null,2))
                $.begin = $.begin + 1;
                let res = $.begin % ReadArr.length;
                $.setdata(res + "", 'zqbody_index');
            try {
                if (bodyobj.error_code == "200007"&&!$.isNode()) {
                await removebody();
                delbody += 1;
                $.log(bodyobj.message+"已自动删除");
                } else if (bodyobj.error_code == 0) {
                    acticid = bodyobj.url.match(/\d+/)[0];
                    artdesc = bodyobj.description
                    author = bodyobj.account.name
                    ctype = bodyobj.ctype == 0 ? "阅读资讯" : "观看视频";
                    if (artArr.indexOf(acticid) == -1) {
                artArr.unshift(acticid);
                        $.log(ctype + ": " + artdesc + "  ----- " + author + "\n")
                        await $.wait(10000);
                        await AutoRead();
                    } else if (artArr.indexOf(acticid) > -1&&!$.isNode()) {
                        await removebody();
                        $.log("文章ID:" + acticid + " 请求重复，已自动删除")
                        delbody += 1;
                        await $.wait(1000)
                    }
                }
            } catch (e) {
                $.log('获取文章请求失败' + e)
            } finally {
                resolve()
            }
        })
    })
}


function AutoRead() {
    return new Promise((resolve, reject) => {
        $.post(batHost('article/complete.json', articlebody), async(error, response, data) => {
            let readres = JSON.parse(data);
            //$.log(JSON.stringify(readres,null,2))
            if (readres.items.complete == 1) {
                $.log(readres.items.max_notice)
            } else {
                if (readres.error_code == '0' && data.indexOf("read_score") > -1 && readres.items.read_score > 0) {
                    console.log(`本次阅读获得${readres.items.read_score}个青豆，请等待30s后执行下一次阅读\n`);
                    if (data.indexOf("ctype") > -1) {
                        if (readres.items.ctype == 0) {
                            artsnum += 1
                            readscore += parseInt(readres.items.read_score);
                        } else if (readres.items.ctype == 3) {
                            videosnum += 1
                            videoscore += parseInt(readres.items.read_score);
                        }
                    }
                    if ($.index % 2 == 0) {
                        if ($.isNode() && process.env.YOUTH_ATIME) {
                            timebodyVal = process.env.YOUTH_ATIME;
                        } else {
                            timebodyVal = $.getdata('autotime_zq');
                        }
                        await readTime()
                    };
                    if ($.index == ReadArr.length) {
                        $.log($.index + "次任务已全部完成，即将结束")
                    } else {
                        await $.wait(20000);
                    }
                } else if (readres.error_code == '0' && data.indexOf('"score":0') > -1 && readres.items.score == 0) {
                    $.log(`\n本次阅读获得0个青豆，等待10s即将开始下次阅读\n`);
                    if (smallzq == "true") {
                        await removebody();
                        $.log("已删除第" + ($.begin) + "个请求，如无需删除请及时提前关掉boxjs内的开关，使用后即关闭")
                        delbody += 1
                    }
                } else if (readres.success == false) {
                    console.log(`第${$.index}次阅读请求有误，请删除此请求`);
                    if (smallzq == "true") {
                        await removebody();
                        $.log("已删除第" + ($.begin) + "个请求，如无需删除请及时提前关掉boxjs内的开关，使用后即关闭");
                        delbody += 1
                    }
                }
            }
            resolve()
        })
    })
}

function removebody() {
  if($.isNode()) {
    return;
  }
  if (articlebody !== ReadArr[0]) {
      smallbody = $.getdata('youth_autoread').replace("&" + articlebody, "");
  } else {
      smallbody = $.getdata('youth_autoread').replace(articlebody + "&", "")
  }
  $.setdata(smallbody, 'youth_autoread')
}

function batHost(api, body) {
    return {
        url: 'https://kandian.wkandian.com/v5/' + api,
        headers: {
            'User-Agent': 'KDApp/2.1.1 (iPhone; iOS 14.6; Scale/3.00)',
            'Host': 'kandian.wkandian.com',
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: body
    }
}

function readTime() {
    return new Promise((resolve, reject) => {
        $.post(batHost('user/stay.json', timebodyVal), (error, resp, data) => {
            let timeres = JSON.parse(data)
            if (timeres.error_code == 0) {
                readtimes = timeres.time / 60
                $.log(`阅读时长共计` + Math.floor(readtimes) + `分钟`)
            }
            resolve()
        })
    })
}

function Getbody() {
    if ($request && ($request.url.match(/\/article\/info/)|| $request.url.match(/\/article\/complete/))) {
       if($request.url.match(/complete/)){
          bodyVal = $request.body
       } else {
        bodyVal = $request.url.split("?")[1]
        };
        if (YouthBody) {
            if (YouthBody.indexOf(bodyVal) > -1) {
                $.log("此阅读请求已存在，本次跳过")
            } else if (YouthBody.indexOf(bodyVal) == -1) {
                YouthBodys = YouthBody + "&" + bodyVal;
                $.setdata(YouthBodys, 'youth_autoread');
                $.log(`${$.name}获取阅读: 成功, YouthBodys: ${bodyVal}`);
                bodys = YouthBodys.split("&")
                $.msg($.name, "获取第" + bodys.length + "个阅读请求: 成功🎉", ``)
            }
        } else {
            $.setdata(bodyVal, 'youth_autoread');
            $.log(`${$.name}获取阅读: 成功, YouthBodys: ${bodyVal}`);
            $.msg($.name, `获取第一个阅读请求: 成功🎉`, ``)
        }
    } else if ($request && $request.method != `OPTIONS` && $request.url.match(/\/v5\/user\/stay/)) {
        const timebodyVal = $request.body;
        if (timebodyVal) $.setdata(timebodyVal, 'autotime_zq');
        $.log(`${$.name}获取阅读时长: 成功, timebodyVal: ${timebodyVal}`);
        $.msg($.name, `获取阅读时长: 成功🎉`, ``)
    }
}


function Env(t,e){"undefined"!=typeof process&&JSON.stringify(process.env).indexOf("GITHUB")>-1&&process.exit(0);class s{constructor(t){this.env=t}send(t,e="GET"){t="string"==typeof t?{url:t}:t;let s=this.get;return"POST"===e&&(s=this.post),new Promise((e,i)=>{s.call(this,t,(t,s,r)=>{t?i(t):e(s)})})}get(t){return this.send.call(this.env,t)}post(t){return this.send.call(this.env,t,"POST")}}return new class{constructor(t,e){this.name=t,this.http=new s(this),this.data=null,this.dataFile="box.dat",this.logs=[],this.isMute=!1,this.isNeedRewrite=!1,this.logSeparator="\n",this.startTime=(new Date).getTime(),Object.assign(this,e),this.log("",`\ud83d\udd14${this.name}, \u5f00\u59cb!`)}isNode(){return"undefined"!=typeof module&&!!module.exports}isQuanX(){return"undefined"!=typeof $task}isSurge(){return"undefined"!=typeof $httpClient&&"undefined"==typeof $loon}isLoon(){return"undefined"!=typeof $loon}toObj(t,e=null){try{return JSON.parse(t)}catch{return e}}toStr(t,e=null){try{return JSON.stringify(t)}catch{return e}}getjson(t,e){let s=e;const i=this.getdata(t);if(i)try{s=JSON.parse(this.getdata(t))}catch{}return s}setjson(t,e){try{return this.setdata(JSON.stringify(t),e)}catch{return!1}}getScript(t){return new Promise(e=>{this.get({url:t},(t,s,i)=>e(i))})}runScript(t,e){return new Promise(s=>{let i=this.getdata("@chavy_boxjs_userCfgs.httpapi");i=i?i.replace(/\n/g,"").trim():i;let r=this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout");r=r?1*r:20,r=e&&e.timeout?e.timeout:r;const[o,h]=i.split("@"),a={url:`http://${h}/v1/scripting/evaluate`,body:{script_text:t,mock_type:"cron",timeout:r},headers:{"X-Key":o,Accept:"*/*"}};this.post(a,(t,e,i)=>s(i))}).catch(t=>this.logErr(t))}loaddata(){if(!this.isNode())return{};{this.fs=this.fs?this.fs:require("fs"),this.path=this.path?this.path:require("path");const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&&this.fs.existsSync(e);if(!s&&!i)return{};{const i=s?t:e;try{return JSON.parse(this.fs.readFileSync(i))}catch(t){return{}}}}}writedata(){if(this.isNode()){this.fs=this.fs?this.fs:require("fs"),this.path=this.path?this.path:require("path");const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&&this.fs.existsSync(e),r=JSON.stringify(this.data);s?this.fs.writeFileSync(t,r):i?this.fs.writeFileSync(e,r):this.fs.writeFileSync(t,r)}}lodash_get(t,e,s){const i=e.replace(/\[(\d+)\]/g,".$1").split(".");let r=t;for(const t of i)if(r=Object(r)[t],void 0===r)return s;return r}lodash_set(t,e,s){return Object(t)!==t?t:(Array.isArray(e)||(e=e.toString().match(/[^.[\]]+/g)||[]),e.slice(0,-1).reduce((t,s,i)=>Object(t[s])===t[s]?t[s]:t[s]=Math.abs(e[i+1])>>0==+e[i+1]?[]:{},t)[e[e.length-1]]=s,t)}getdata(t){let e=this.getval(t);if(/^@/.test(t)){const[,s,i]=/^@(.*?)\.(.*?)$/.exec(t),r=s?this.getval(s):"";if(r)try{const t=JSON.parse(r);e=t?this.lodash_get(t,i,""):e}catch(t){e=""}}return e}setdata(t,e){let s=!1;if(/^@/.test(e)){const[,i,r]=/^@(.*?)\.(.*?)$/.exec(e),o=this.getval(i),h=i?"null"===o?null:o||"{}":"{}";try{const e=JSON.parse(h);this.lodash_set(e,r,t),s=this.setval(JSON.stringify(e),i)}catch(e){const o={};this.lodash_set(o,r,t),s=this.setval(JSON.stringify(o),i)}}else s=this.setval(t,e);return s}getval(t){return this.isSurge()||this.isLoon()?$persistentStore.read(t):this.isQuanX()?$prefs.valueForKey(t):this.isNode()?(this.data=this.loaddata(),this.data[t]):this.data&&this.data[t]||null}setval(t,e){return this.isSurge()||this.isLoon()?$persistentStore.write(t,e):this.isQuanX()?$prefs.setValueForKey(t,e):this.isNode()?(this.data=this.loaddata(),this.data[e]=t,this.writedata(),!0):this.data&&this.data[e]||null}initGotEnv(t){this.got=this.got?this.got:require("got"),this.cktough=this.cktough?this.cktough:require("tough-cookie"),this.ckjar=this.ckjar?this.ckjar:new this.cktough.CookieJar,t&&(t.headers=t.headers?t.headers:{},void 0===t.headers.Cookie&&void 0===t.cookieJar&&(t.cookieJar=this.ckjar))}get(t,e=(()=>{})){t.headers&&(delete t.headers["Content-Type"],delete t.headers["Content-Length"]),this.isSurge()||this.isLoon()?(this.isSurge()&&this.isNeedRewrite&&(t.headers=t.headers||{},Object.assign(t.headers,{"X-Surge-Skip-Scripting":!1})),$httpClient.get(t,(t,s,i)=>{!t&&s&&(s.body=i,s.statusCode=s.status),e(t,s,i)})):this.isQuanX()?(this.isNeedRewrite&&(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>e(t))):this.isNode()&&(this.initGotEnv(t),this.got(t).on("redirect",(t,e)=>{try{if(t.headers["set-cookie"]){const s=t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString();this.ckjar.setCookieSync(s,null),e.cookieJar=this.ckjar}}catch(t){this.logErr(t)}}).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>{const{message:s,response:i}=t;e(s,i,i&&i.body)}))}post(t,e=(()=>{})){if(t.body&&t.headers&&!t.headers["Content-Type"]&&(t.headers["Content-Type"]="application/x-www-form-urlencoded"),t.headers&&delete t.headers["Content-Length"],this.isSurge()||this.isLoon())this.isSurge()&&this.isNeedRewrite&&(t.headers=t.headers||{},Object.assign(t.headers,{"X-Surge-Skip-Scripting":!1})),$httpClient.post(t,(t,s,i)=>{!t&&s&&(s.body=i,s.statusCode=s.status),e(t,s,i)});else if(this.isQuanX())t.method="POST",this.isNeedRewrite&&(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>e(t));else if(this.isNode()){this.initGotEnv(t);const{url:s,...i}=t;this.got.post(s,i).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>{const{message:s,response:i}=t;e(s,i,i&&i.body)})}}time(t){let e={"M+":(new Date).getMonth()+1,"d+":(new Date).getDate(),"H+":(new Date).getHours(),"m+":(new Date).getMinutes(),"s+":(new Date).getSeconds(),"q+":Math.floor(((new Date).getMonth()+3)/3),S:(new Date).getMilliseconds()};/(y+)/.test(t)&&(t=t.replace(RegExp.$1,((new Date).getFullYear()+"").substr(4-RegExp.$1.length)));for(let s in e)new RegExp("("+s+")").test(t)&&(t=t.replace(RegExp.$1,1==RegExp.$1.length?e[s]:("00"+e[s]).substr((""+e[s]).length)));return t}msg(e=t,s="",i="",r){const o=t=>{if(!t)return t;if("string"==typeof t)return this.isLoon()?t:this.isQuanX()?{"open-url":t}:this.isSurge()?{url:t}:void 0;if("object"==typeof t){if(this.isLoon()){let e=t.openUrl||t.url||t["open-url"],s=t.mediaUrl||t["media-url"];return{openUrl:e,mediaUrl:s}}if(this.isQuanX()){let e=t["open-url"]||t.url||t.openUrl,s=t["media-url"]||t.mediaUrl;return{"open-url":e,"media-url":s}}if(this.isSurge()){let e=t.url||t.openUrl||t["open-url"];return{url:e}}}};this.isMute||(this.isSurge()||this.isLoon()?$notification.post(e,s,i,o(r)):this.isQuanX()&&$notify(e,s,i,o(r)));let h=["","==============\ud83d\udce3\u7cfb\u7edf\u901a\u77e5\ud83d\udce3=============="];h.push(e),s&&h.push(s),i&&h.push(i),console.log(h.join("\n")),this.logs=this.logs.concat(h)}log(...t){t.length>0&&(this.logs=[...this.logs,...t]),console.log(t.join(this.logSeparator))}logErr(t,e){const s=!this.isSurge()&&!this.isQuanX()&&!this.isLoon();s?this.log("",`\u2757\ufe0f${this.name}, \u9519\u8bef!`,t.stack):this.log("",`\u2757\ufe0f${this.name}, \u9519\u8bef!`,t)}wait(t){return new Promise(e=>setTimeout(e,t))}done(t={}){const e=(new Date).getTime(),s=(e-this.startTime)/1e3;this.log("",`\ud83d\udd14${this.name}, \u7ed3\u675f! \ud83d\udd5b ${s} \u79d2`),this.log(),(this.isSurge()||this.isQuanX()||this.isLoon())&&$done(t)}}(t,e)}
